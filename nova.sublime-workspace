{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"gl_po",
				"gl_PointSize"
			],
			[
				"inv_",
				"inv_log_v_squared"
			],
			[
				"f",
				"f"
			],
			[
				"get_",
				"get_current_time"
			],
			[
				"particle_vert",
				"particle_vert_size"
			],
			[
				"player_pa",
				"player_particles"
			],
			[
				"cloud_",
				"cloud_verts"
			],
			[
				"partcle_ver",
				"particle_vert_size"
			],
			[
				"vert",
				"vert_id"
			],
			[
				"max_",
				"max_cloud_particle_count"
			],
			[
				"init_p",
				"init_particle"
			],
			[
				"init_",
				"init_particle"
			],
			[
				"world",
				"world_size"
			],
			[
				"pos",
				"pos"
			],
			[
				"pause",
				"pause_particle"
			],
			[
				"gravity",
				"gravity_constant"
			],
			[
				"player_particl",
				"player_particle_radius"
			],
			[
				"player_part",
				"player_particles"
			],
			[
				"particle",
				"particle_count"
			],
			[
				"tot",
				"total_particle_count"
			],
			[
				"player_pl",
				"player_particle_radius"
			],
			[
				"player_rad",
				"player_particle_radius"
			],
			[
				"get",
				"get_particle_radius"
			],
			[
				"init",
				"initial_aspect_ratio"
			],
			[
				"world_",
				"world_size_div_two"
			],
			[
				"screen",
				"screen_size"
			],
			[
				"div",
				"div_result_bad"
			],
			[
				"prin",
				"print_div_result"
			],
			[
				"div_",
				"div_float"
			],
			[
				"move_",
				"move_down"
			],
			[
				"move",
				"move_left"
			],
			[
				"scre",
				"screen_coords"
			],
			[
				"func",
				"func_add"
			],
			[
				"noise",
				"noise_y"
			],
			[
				"ve",
				"velocity"
			],
			[
				"delt",
				"delta_velocity"
			],
			[
				"contr",
				"controller_count"
			],
			[
				"controller",
				"controller_states"
			],
			[
				"controller_",
				"controller_count"
			],
			[
				"control",
				"controller_connected"
			],
			[
				"glfw",
				"glfwTerminate"
			],
			[
				"raw_",
				"raw_stick_x"
			],
			[
				"stick",
				"stick_y"
			],
			[
				"sThum",
				"sThumbLY"
			],
			[
				"uint",
				"uint16_t"
			],
			[
				"sTh",
				"sThumbLX"
			],
			[
				"en",
				"enable_v_sync"
			],
			[
				"fir",
				"friction_force"
			],
			[
				"fric",
				"friction_force"
			],
			[
				"fri",
				"friction_factor"
			],
			[
				"int",
				"int16_t"
			],
			[
				"particle_Vert",
				"particle_vert_size"
			],
			[
				"particle_ver",
				"particle_vert_size"
			],
			[
				"grid",
				"grid_size"
			],
			[
				"cel",
				"cell_y"
			],
			[
				"cell",
				"cell_x"
			],
			[
				"grad",
				"gradient"
			],
			[
				"x",
				"x_int"
			],
			[
				"stati",
				"static_cast"
			],
			[
				"inital",
				"initial_window_size_x"
			],
			[
				"glUni",
				"glUniform2f"
			],
			[
				"particle_",
				"particle_count"
			],
			[
				"bloc",
				"block_particles"
			],
			[
				"block",
				"block_particle_count"
			],
			[
				"partic",
				"particle_count"
			],
			[
				"cell_",
				"cell_particle_counts"
			],
			[
				"mon",
				"monitor_size_y"
			],
			[
				"player_vert",
				"player_vert_count"
			],
			[
				"ps",
				"pseudo_random_float"
			],
			[
				"parti",
				"particle_verts"
			],
			[
				"point_ver",
				"point_vertex_buffer"
			],
			[
				"inv",
				"inv_log_v_squared"
			],
			[
				"log",
				"log_v_squared"
			],
			[
				"lg",
				"log_v"
			],
			[
				"2f",
				"2f"
			],
			[
				"u",
				"u"
			],
			[
				"glUnif",
				"glUniform1f"
			],
			[
				"glUniform",
				"glUniform2f"
			],
			[
				"cur",
				"current_y"
			],
			[
				"PI",
				"PI"
			],
			[
				"v",
				"v"
			],
			[
				"const",
				"const"
			],
			[
				"XInputGet",
				"XInputGetState"
			],
			[
				"x_input_state",
				"x_input_get_state_stub"
			],
			[
				"x_in",
				"x_input_func"
			],
			[
				"XIn",
				"XInputGetStateFunc"
			],
			[
				"XInpu",
				"XInputGetStateFunc"
			],
			[
				"ERROR",
				"ERROR_DEVICE_NOT_CONNECTED"
			],
			[
				"ini",
				"initial_aspect_ratio"
			],
			[
				"acit",
				"active_player_count"
			],
			[
				"player",
				"player_id"
			],
			[
				"con",
				"controller_1_connected"
			],
			[
				"controler",
				"controller_0_connected"
			],
			[
				"contro",
				"controller_1_connected"
			],
			[
				"connn",
				"controller_0_connected"
			],
			[
				"act",
				"active_player_count"
			],
			[
				"aci",
				"active_player_count"
			],
			[
				"player_color",
				"player_color_id"
			],
			[
				"player_r",
				"player_particle_radius"
			],
			[
				"map",
				"mapped_stick"
			],
			[
				"stick_",
				"stick_scale_value"
			],
			[
				"raw",
				"raw_stick_y"
			],
			[
				"raw_st",
				"raw_stick_y"
			],
			[
				"damp",
				"damping_factor"
			],
			[
				"mapped",
				"mapped_stick1"
			],
			[
				"mapp",
				"mapped_stick0"
			],
			[
				"grav",
				"gravity"
			],
			[
				"particl",
				"particles"
			],
			[
				"totla",
				"total_read_input_time"
			],
			[
				"unma",
				"unmapped_x0"
			],
			[
				"GLFW",
				"GLFW_PRESS"
			],
			[
				"initial",
				"initial_aspect_ratio"
			],
			[
				"GLFW_",
				"GLFW_JOYSTICK_1"
			],
			[
				"player_",
				"player_particles"
			],
			[
				"stic",
				"stick_scale_value"
			],
			[
				"VEc",
				"VEC2_ZERO"
			],
			[
				"player_p",
				"player_particles"
			],
			[
				"player_0_",
				"player_0_particle"
			],
			[
				"player_0",
				"player_0_start_position"
			],
			[
				"ax",
				"axis_count"
			],
			[
				"GL",
				"GL_TRUE"
			],
			[
				"ii",
				"initial_player_mass"
			],
			[
				"min",
				"min_distance_sqr"
			],
			[
				"player_parti",
				"player_particle_radius"
			],
			[
				"is",
				"is_full_screen"
			],
			[
				"part",
				"particle_gravity"
			],
			[
				"length",
				"length_squared"
			],
			[
				"sta",
				"start_particle_update_time"
			]
		]
	},
	"buffers":
	[
		{
			"file": "nova.sublime-project",
			"settings":
			{
				"buffer_size": 425,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/math_main.cpp",
			"settings":
			{
				"buffer_size": 553,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/basic.vert",
			"settings":
			{
				"buffer_size": 316,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/particle.vert",
			"settings":
			{
				"buffer_size": 365,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/particle.frag",
			"settings":
			{
				"buffer_size": 267,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/basic.frag",
			"settings":
			{
				"buffer_size": 145,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/math.cpp",
			"settings":
			{
				"buffer_size": 5174,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/math.hpp",
			"settings":
			{
				"buffer_size": 2204,
				"line_ending": "Windows"
			}
		},
		{
			"file": "build.bat",
			"settings":
			{
				"buffer_size": 596,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Nova",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"debu",
				"Build: Debug"
			],
			[
				"deb",
				"Build: Debug"
			],
			[
				"debug",
				"Build: Debug"
			],
			[
				"d",
				"Build: Debug"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"package control",
				"Package Control: Install Package"
			],
			[
				"de",
				"Build: Debug"
			],
			[
				"build",
				"Build: Debug"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"packcontr",
				"Package Control: Remove Package"
			],
			[
				"packagecon",
				"Package Control: Install Package"
			],
			[
				"packcon",
				"Package Control: Enable Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"packcontrol",
				"Package Control: Install Package"
			],
			[
				"packg",
				"Package Control: Install Package"
			],
			[
				"b",
				"Build: Update"
			],
			[
				"",
				"Build: Run Bash"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"Package Control: remov",
				"Package Control: Remove Package"
			],
			[
				"bui",
				"Build: Clean"
			],
			[
				"build test",
				"Build: Test"
			],
			[
				"buil",
				"Build: Test"
			],
			[
				"buildtest",
				"Build: Test"
			],
			[
				"buildtes",
				"Build: Test"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"sublime",
				"Set Syntax: SublimeClangErrorPanel"
			],
			[
				"sublimec",
				"Set Syntax: SublimeClangErrorPanel"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 387.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"SublimeClang",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/albertelwin/Nova/repo/src"
	],
	"file_history":
	[
		"/C/Users/albertelwin/Nova/repo/src/win32_main.cpp",
		"/C/Users/albertelwin/Downloads/DOOM-master/DOOM-master/linuxdoom-1.10/g_game.c",
		"/C/Users/albertelwin/Downloads/DOOM-master/DOOM-master/linuxdoom-1.10/r_bsp.h",
		"/C/Users/albertelwin/Downloads/DOOM-master/DOOM-master/linuxdoom-1.10/r_bsp.c",
		"/C/Users/albertelwin/Downloads/DOOM-master/DOOM-master/linuxdoom-1.10/d_main.c",
		"/C/Users/albertelwin/Downloads/DOOM-master/DOOM-master/linuxdoom-1.10/w_wad.h",
		"/C/Users/albertelwin/Downloads/DOOM-master/DOOM-master/linuxdoom-1.10/st_stuff.h",
		"/C/Users/albertelwin/Downloads/DOOM-master/DOOM-master/linuxdoom-1.10/r_main.h",
		"/C/Users/albertelwin/Downloads/DOOM-master/DOOM-master/linuxdoom-1.10/r_draw.h",
		"/C/Users/albertelwin/Downloads/DOOM-master/DOOM-master/linuxdoom-1.10/r_draw.c",
		"/C/Users/albertelwin/Downloads/linuxsdoom.tar/linuxsdoom",
		"/C/Program Files (x86)/Steam/SteamApps/common/Glitchspace/2015-02-18_201012/output_log.txt",
		"/C/Users/albertelwin/Downloads/steamworks_sdk_131/sdk/tools/ContentBuilder/readme.txt",
		"/C/Users/albertelwin/Downloads/steamworks_sdk_131/sdk/Readme.txt",
		"/C/Users/albertelwin/Bears/repo/Assets/Scripts/Framework/Achievements.cs",
		"/C/MinGW/msys/1.0/home/albertelwin/Rand/multiple_return_values.cpp",
		"/C/Users/albertelwin/Nova/repo/src/basic.vert",
		"/C/Users/albertelwin/Nova/docs/life_and_death_of_stars_notes.txt",
		"/C/Users/albertelwin/Nova/docs/nova_design.txt",
		"/C/Users/albertelwin/Blog/blog.html",
		"/C/Users/albertelwin/Blog/_config.yml",
		"/C/Users/albertelwin/Blog/portfolio.html",
		"/C/Users/albertelwin/Blog/_site/page2/index.html",
		"/C/Users/albertelwin/Blog/_includes/nav.html",
		"/C/Users/albertelwin/Blog/about.html",
		"/C/Users/albertelwin/Blog/index.html",
		"/C/Users/albertelwin/Blog/_includes/head.html",
		"/C/Users/albertelwin/Blog/js/bootstrap.js",
		"/C/Users/albertelwin/Blog/css/clean-blog.css",
		"/C/Users/albertelwin/Blog/_site/index.html",
		"/C/Users/albertelwin/Blog/js/clean-blog.js",
		"/C/Users/albertelwin/Blog/js/jquery.js",
		"/C/Users/albertelwin/Blog/_layouts/page.html",
		"/C/Users/albertelwin/Blog/less/mixins.less",
		"/C/Users/albertelwin/Blog/less/variables.less",
		"/C/Users/albertelwin/Blog/less/clean-blog.less",
		"/C/Users/albertelwin/Blog/css/bootstrap.css",
		"/C/Users/albertelwin/Blog/_layouts/post.html",
		"/C/Users/albertelwin/Blog/package.json",
		"/C/Users/albertelwin/Blog/_layouts/default.html",
		"/C/Users/albertelwin/Nova/repo/src/math_main.cpp",
		"/C/Users/albertelwin/Blog/feed.xml",
		"/C/Users/albertelwin/Blog/mail/contact_me.php",
		"/C/Users/albertelwin/Blog/contact.html",
		"/C/Users/albertelwin/Blog/LICENSE",
		"/C/Users/albertelwin/Blog/.gitignore",
		"/C/Users/albertelwin/_Blog/CNAME",
		"/C/Users/albertelwin/Blog/_posts/2012-10-03-honors-project.markdown",
		"/C/Users/albertelwin/Blog/_posts/2012-10-17-global-illumination.markdown",
		"/C/Users/albertelwin/Blog/_posts/2012-10-10-demo_framework.markdown",
		"/C/Users/albertelwin/Blog/_posts/2013-02-13-opencl-path-tracing.markdown",
		"/C/Users/albertelwin/Blog/_posts/2013-02-13-polygon-model-rendering.markdown",
		"/C/Users/albertelwin/Blog/_posts/2013-02-27-acceleration-structures.markdown",
		"/C/Users/albertelwin/Blog/_posts/2013-04-22-explicit-light-sampling.markdown",
		"/C/Users/albertelwin/Blog/_posts/2013-04-22-native-client.markdown",
		"/C/Users/albertelwin/Blog/_posts/2013-04-22-native_client.markdown",
		"/C/Users/albertelwin/Blog/_posts/2013-08-21-glitchspace.markdown",
		"/C/Users/albertelwin/Blog/_posts/2015-02-02-glitchspace.markdown",
		"/C/Users/albertelwin/Blog/_posts/2014-09-24-man-must-explore.markdown",
		"/C/Users/albertelwin/Nova/repo/src/lambda_main.cpp",
		"/C/Users/albertelwin/Nova/builds/change_log.txt",
		"/C/Users/albertelwin/AppData/Local/Temp/Temp1_handmade_hero_day_045_source.zip/code/handmade.cpp",
		"/C/Users/albertelwin/Nova/repo/src/particle.frag",
		"/C/Users/albertelwin/Nova/repo/src/particle.vert",
		"/C/Users/albertelwin/Nova/repo/src/basic.frag",
		"/C/Users/albertelwin/Nova/repo/nova.sublime-project",
		"/C/Users/albertelwin/Downloads/handmade_hero_050_source/handmade_hero_day_017_source/code/build.bat",
		"/C/Users/albertelwin/Downloads/handmade_hero_048_source/handmade_hero_day_025_source/code/win32_handmade.cpp",
		"/C/Users/albertelwin/Downloads/handmade_hero_048_source/handmade_hero_day_025_source/code/build.bat",
		"/C/Users/albertelwin/Downloads/glfw-3.1/src/winmm_joystick.c",
		"/C/Users/albertelwin/Downloads/glfw-3.1/src/winmm_joystick.h",
		"/C/Users/albertelwin/Downloads/glfw-3.1/src/iokit_joystick.h",
		"/C/Users/albertelwin/Downloads/glfw-3.1/src/win32_window.c",
		"/C/Users/albertelwin/Downloads/glfw-3.1/src/wl_window.c",
		"/C/Users/albertelwin/Nova/repo/src/gamepad_main.cpp",
		"/C/Users/albertelwin/Nova/repo/src/lib_main.cpp",
		"/C/Users/albertelwin/Downloads/glfw-3.1/CMakeLists.txt",
		"/C/Users/albertelwin/Downloads/glfw-3.1/glfw-3.1/CMakeLists.txt",
		"/C/Users/albertelwin/Downloads/glfw-3.1/glfw-3.1/examples/CMakeLists.txt",
		"/C/Users/albertelwin/Downloads/glfw-3.0.4.bin.WIN64/glfw-3.0.4.bin.WIN64/COPYING.txt",
		"/C/Users/albertelwin/Nova/repo/src/win32_nova.cpp",
		"/C/Users/albertelwin/Nova/repo/.gitignore",
		"/C/Users/albertelwin/Nova/repo/src/math.cpp",
		"/C/Users/albertelwin/Utilities/source/open_sublime.cpp",
		"/C/Users/albertelwin/Utilities/source/test_file.cpp",
		"/C/MSYS2/home/albertelwin/Rust/Nova/src/basic.vert",
		"/C/MinGW/msys/1.0/home/albertelwin/Nova/src/basic.vert",
		"/C/MinGW/msys/1.0/home/albertelwin/Rand/Reverse.cpp",
		"/C/MinGW/msys/1.0/home/albertelwin/Nova/build.bat",
		"/C/MSYS2/home/albertelwin/Rust/Nova/src/basic.frag",
		"/C/MinGW/msys/1.0/home/albertelwin/Nova/dat/basic.vert",
		"/C/MinGW/msys/1.0/home/albertelwin/Rand/ReverseWord.cpp",
		"/C/Users/albertelwin/Downloads/glew-1.11.0-win32/glew-1.11.0/bin/Release/x64/glewinfo.txt",
		"/C/MinGW/msys/1.0/home/albertelwin/Nova/win32_nova.cpp",
		"/C/MinGW/msys/1.0/home/albertelwin/Nova/rnd/build.bat",
		"/C/MinGW/msys/1.0/home/albertelwin/Nova/rnd/src/win32_nova.cpp",
		"/C/MinGW/msys/1.0/home/albertelwin/Nova/rnd/main.cpp",
		"/C/MinGW/msys/1.0/home/albertelwin/Nova/nova.sublime-project",
		"/C/MinGW/msys/1.0/home/albertelwin/Nova/src/win32_nova.cpp",
		"/C/Users/albertelwin/Downloads/handmade_hero_041_source/handmade_hero_day_001_source/code/build.bat",
		"/C/Users/albertelwin/Downloads/handmade_hero_041_source/handmade_hero_day_001_source/license.txt",
		"/C/MinGW/msys/1.0/home/albertelwin/Nova/shell.bat",
		"/C/Users/albertelwin/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/start_up.bat",
		"/C/Users/albertelwin/AppData/Roaming/Sublime Text 3/Installed Packages/Highlight Build Errors.sublime-package",
		"/C/MinGW/msys/1.0/home/albertelwin/Nova/source/win32_nova.cpp",
		"/C/MinGW/msys/1.0/home/albertelwin/Frag/Projects/Frag.sublime-project",
		"/C/MinGW/msys/1.0/home/albertelwin/Rust/paths.txt",
		"/C/Users/albertelwin/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/C/Users/albertelwin/AppData/Roaming/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/C/Users/albertelwin/AppData/Roaming/Sublime Text 3/Packages/SublimeClang/SublimeClang.sublime-settings",
		"/C/MinGW/msys/1.0/home/albertelwin/Rand/Empty.cpp",
		"/C/MinGW/msys/1.0/home/albertelwin/Rand/lambda.cs",
		"/C/MSYS2/home/albertelwin/Rust/Nova/src/math.rs",
		"/C/Users/albertelwin/AppData/Roaming/Sublime Text 3/Packages/User/Redox.sublime-build",
		"/C/MSYS2/home/albertelwin/Rust/Nova/src/main.rs",
		"/C/MSYS2/home/albertelwin/Rust/Nova/builds/change_log.txt",
		"/C/MSYS2/home/albertelwin/Rust/Nova/images/nova_wallpaper_black - Copy.png",
		"/C/MSYS2/home/albertelwin/Rust/Nova/Cargo.toml",
		"/C/MSYS2/home/albertelwin/Rust/Nova/builds/0x0003/change_log.txt",
		"/C/Users/albertelwin/Dropbox/SpaceBudgie/Projects/Glitchspace/Builds/Alpha/alpha_1_8/glitchspace_alpha_1_8_change_log.txt",
		"/C/Users/albertelwin/Glitchspace/repo/Assets/Scripts/Gameplay/Portal.cs",
		"/C/Users/albertelwin/Downloads/GPU_Caps_Viewer_1.22.0/GPU_Caps_Viewer_1.22.0.0/media/particles.cl",
		"/C/Users/albertelwin/Downloads/GPU_Caps_Viewer_1.22.0/GPU_Caps_Viewer_1.22.0.0/Start_OpenCL_Particles.bat",
		"/C/MSYS2/home/albertelwin/Rust/Nova/src/graphics.rs",
		"/C/Users/albertelwin/Downloads/GPU_GEMS_NBodySim/GPU_GEMS_NBodySim/Assets/Scripts/NBodySim.cs",
		"/C/Users/albertelwin/Downloads/GPU_GEMS_NBodySim/GPU_GEMS_NBodySim/Assets/Shaders/IntegrateBodies.compute",
		"/C/Users/albertelwin/Downloads/GPU_GEMS_NBodySim/GPU_GEMS_NBodySim/Assets/Shaders/ParticleShader.shader",
		"/C/MSYS2/home/albertelwin/Rust/Odd/sex_game.rs"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"it_particle_count",
			"max_cloud_particle_count",
			"for(uint32_t i = 0; i < max",
			"f",
			"7.2f",
			"9.f",
			"24",
			"9.f",
			"7.2f",
			"2048",
			"9.f",
			"16.f",
			"7.2f",
			"0.2f",
			"6.f",
			"* 7.2f",
			"6.f",
			";//",
			"4.f",
			"2.f",
			"7.2f",
			"0.5f)",
			"max_particle_count",
			"		for(uint32_t i = 0; i < max_particle_count; i++) {\n",
			"r_t",
			"8.f",
			"3.2f",
			"t * 4.f",
			"4.f",
			"3.2f",
			"0.02f",
			"0.4f",
			" * 2.f",
			"simplex_noise",
			"inv_log_v_squared",
			" * 60.f",
			" * g",
			"inv_log_v_squared",
			"rt ",
			"rt",
			" * g",
			"(gravity_constant / 0.00002f)",
			"inv_log_v_squared",
			"512",
			" * 16.f",
			"inv_log_v_squared",
			"1.2f",
			"2.f",
			"inv_log_v_squared",
			"log_v",
			"freqs",
			"camera_position",
			"particle_vertex_buffer",
			"cloud_vertex_buffer",
			"init_particles",
			"GL_",
			"GL_SRC_ALPHA",
			"false",
			"particles[i].mass",
			"player_particle_radius",
			"radius",
			"particle_mass_to_consume",
			"half_world_size",
			"move_player",
			"4.f",
			"1.2f",
			"half_world_size",
			"uint32_t",
			"x_index",
			"half_world_size",
			"world_size",
			".x",
			"1.f",
			"aspect_ratio",
			"aspect_ratio, aspect_ratio), math::clamp(position.y, -1.f, 1.f ) };\n\n			//TODO: velocity = velocity - (normal * dot(velocity, normal))\n			if(position.x < -aspect_ratio || position.x > aspect_ratio) {\n				math::Vec2 const bound_normal = { 0.f, 1.f };\n				player.velocity = bound_normal * math::dot(velocity, bound_normal);",
			"world_size_div_two",
			"1.f",
			"aspect_ratio",
			"2.f",
			"screen_size",
			"2.f",
			"DEBUG_COMPILER_FLAGS",
			"div_result_bad",
			"div_result_good",
			"div_result",
			"div_result_good",
			"value",
			"get_vector()",
			"position",
			"int",
			"bool",
			"contact",
			"navbar",
			"site-heading",
			"yourname",
			"\n",
			"math::VEC2_ZERO",
			"{ 0.f, 0.f }",
			"length",
			"vec2_length",
			"VEC2_ZERO",
			"VEC2_ONE",
			"FFFFFF",
			" + math::simplex_noise(",
			"math::simplex_noise",
			"0.5f",
			" + 1.f",
			";",
			"position",
			"position.y + 1.f, position.x + 1.f),\n		};\n\n		return (velocity - 0.5f) * 2.f * 0.2f;\n	};\n\n	auto init_particles = [&]() {",
			"position",
			");",
			"float const noise_",
			"random_float",
			"active_player_count",
			"			for(uint32_t j = 0; j < active_player_count; j++)\n",
			"wall_normal",
			"wall_normal = { 0.f, 1.f };\n				player.velocity = wall_normal * math::dot(velocity, wall_normal);\n			}\n\n			if(position.y < 1.f || position.y > 1.f) {\n				math::Vec2 const \n			}",
			"delta_position",
			"position",
			"clamp_float",
			"Vec2",
			"controller_0_state",
			"max_player",
			"controller_",
			"bool const",
			"_state",
			"controller_"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "nova.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 425,
						"regions":
						{
						},
						"selection":
						[
							[
								322,
								322
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/math_main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 553,
						"regions":
						{
						},
						"selection":
						[
							[
								258,
								258
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/basic.vert",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 316,
						"regions":
						{
						},
						"selection":
						[
							[
								232,
								232
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/particle.vert",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 365,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/particle.frag",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 267,
						"regions":
						{
						},
						"selection":
						[
							[
								261,
								261
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/basic.frag",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 145,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/math.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5174,
						"regions":
						{
						},
						"selection":
						[
							[
								281,
								281
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 44.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/math.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2204,
						"regions":
						{
						},
						"selection":
						[
							[
								692,
								692
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1186.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "build.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 596,
						"regions":
						{
						},
						"selection":
						[
							[
								437,
								437
							]
						],
						"settings":
						{
							"syntax": "Packages/Batch File/Batch File.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 100.0
	},
	"output.exec":
	{
		"height": 200.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "nova.sublime-project",
	"replace":
	{
		"height": 38.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"particle.frag"
			],
			[
				"win",
				"win32_main.cpp"
			],
			[
				"part",
				"particle.frag"
			],
			[
				"math",
				"math.hpp"
			],
			[
				"w",
				"win32_main.cpp"
			],
			[
				"basic",
				"basic.vert"
			],
			[
				"pa",
				"particle.frag"
			],
			[
				"p",
				"particle.vert"
			],
			[
				"win32",
				"win32_main.cpp"
			],
			[
				"particle",
				"particle.frag"
			],
			[
				"win3",
				"win32_main.cpp"
			],
			[
				"bui",
				"C:\\Users\\albertelwin\\Nova\\repo\\build.bat"
			],
			[
				"bu",
				"C:\\Users\\albertelwin\\Nova\\repo\\build.bat"
			],
			[
				"buil",
				"C:\\Users\\albertelwin\\Nova\\repo\\build.bat"
			],
			[
				"ma",
				"math.hpp"
			],
			[
				"pairt",
				"particle.vert"
			],
			[
				"frag",
				"basic.frag"
			],
			[
				"parti",
				"particle.vert"
			],
			[
				"main",
				"math_main.cpp"
			],
			[
				"build",
				"C:\\Users\\albertelwin\\Nova\\repo\\build.bat"
			],
			[
				"bas",
				"basic.frag"
			],
			[
				"math_m",
				"math_main.cpp"
			],
			[
				"basi",
				"basic.vert"
			],
			[
				"mth",
				"math.cpp"
			],
			[
				"nova",
				"C:\\Users\\albertelwin\\Nova\\repo\\nova.sublime-project"
			],
			[
				"m",
				"math.cpp"
			],
			[
				"graph",
				"graphics.rs"
			],
			[
				"bs",
				"basic.vert"
			],
			[
				"gr",
				"graphics.rs"
			],
			[
				"app",
				"Source\\Application.cpp"
			],
			[
				"ggx",
				"Shaders\\ggx_frag.essl"
			],
			[
				"post",
				"Shaders\\post_composite_frag.essl"
			],
			[
				"gu",
				"C:\\MinGW\\msys\\1.0\\home\\albertelwin\\Frag\\Media\\Shaders\\gauss_blur.essl"
			],
			[
				"appl",
				"Source\\Application.hpp"
			],
			[
				"blur",
				"Shaders\\blur_frag.essl"
			],
			[
				"enum",
				"Source\\Enums.hpp"
			],
			[
				"ope",
				"Source\\OpenGLES2.hpp"
			],
			[
				"g",
				"Shaders\\ggx_vert.essl"
			],
			[
				"ap",
				"Source\\Application.cpp"
			],
			[
				"openg",
				"Source\\OpenGLES2.cpp"
			],
			[
				"gg",
				"Shaders\\ggx_frag.essl"
			],
			[
				"op",
				"Source\\OpenGLES2.cpp"
			],
			[
				"depth",
				"Shaders\\depth_frag.essl"
			],
			[
				"gemo",
				"Source\\Geometry.cpp"
			],
			[
				"vert",
				"Source\\VertexBuffer.hpp"
			],
			[
				"image.cpp",
				"Source\\Image.cpp"
			],
			[
				"a",
				"Source\\Application.cpp"
			],
			[
				"en",
				"Source\\Enums.hpp"
			],
			[
				"blu",
				"Shaders\\blur_frag.essl"
			],
			[
				"font",
				"Source\\Font.cpp"
			],
			[
				"land",
				"C:\\Users\\albertelwin\\Glitchspace\\repo\\Assets\\Editor\\LandscapeInspector.cs"
			],
			[
				"com",
				"Shaders\\post_composite_frag.essl"
			],
			[
				"fon",
				"Source\\Font.cpp"
			],
			[
				"ren",
				"Shaders\\render_texture_frag.essl"
			],
			[
				"render",
				"Shaders\\render_texture_frag.essl"
			],
			[
				"rnd",
				"Shaders\\render_texture_frag.essl"
			],
			[
				"rend",
				"Shaders\\render_texture_frag.essl"
			],
			[
				"open",
				"Source\\OpenGLES2.hpp"
			],
			[
				"image",
				"Source\\Image.hpp"
			],
			[
				"em",
				"Source\\Enums.hpp"
			],
			[
				"user",
				"Source\\UserInterface.cpp"
			],
			[
				"v",
				"Source\\VertexBuffer.hpp"
			],
			[
				"ver",
				"Source\\VertexBuffer.cpp"
			],
			[
				"te",
				"Source\\Texture.hpp"
			],
			[
				"fr",
				"Source\\FrameBuffer.hpp"
			],
			[
				"shader",
				"Source\\Shader.hpp"
			],
			[
				"sh",
				"Source\\Shader.cpp"
			],
			[
				"shad",
				"Source\\Shader.cpp"
			],
			[
				"fra",
				"Source\\FrameBuffer.hpp"
			],
			[
				"fram",
				"Source\\FrameBuffer.hpp"
			],
			[
				"texture",
				"Source\\Texture.cpp"
			],
			[
				"t",
				"Source\\Texture.hpp"
			],
			[
				"sm",
				"Source\\SmartPtr.hpp"
			],
			[
				"map",
				"Source\\Maps.cpp"
			],
			[
				"ba",
				"Shaders\\bar_frag.essl"
			],
			[
				"bar",
				"Shaders\\bar_vert.essl"
			],
			[
				"playercon",
				"C:\\Users\\albertelwin\\7dfps\\repo\\Assets\\Code\\Gameplay\\Actors\\PlayerController.cs"
			],
			[
				"wind",
				"C:\\MinGW\\msys\\1.0\\home\\albertelwin\\Frag\\Window.cpp"
			],
			[
				"window.c",
				"C:\\MinGW\\msys\\1.0\\home\\albertelwin\\Frag\\Window.cpp"
			],
			[
				"window",
				"C:\\MinGW\\msys\\1.0\\home\\albertelwin\\Frag\\Window.hpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 90.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
